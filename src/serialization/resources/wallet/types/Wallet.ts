/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Syndicate from "../../../../api";
import * as core from "../../../../core";

export const Wallet: core.serialization.ObjectSchema<serializers.wallet.Wallet.Raw, Syndicate.wallet.Wallet> =
    core.serialization.object({
        walletId: core.serialization.string(),
        walletAddress: core.serialization.string(),
        chainId: core.serialization.number(),
        nonce: core.serialization.number(),
        isActive: core.serialization.boolean(),
        projectId: core.serialization.string(),
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date(),
        walletType: core.serialization.lazy(async () => (await import("../../..")).wallet.WalletType),
    });

export declare namespace Wallet {
    interface Raw {
        walletId: string;
        walletAddress: string;
        chainId: number;
        nonce: number;
        isActive: boolean;
        projectId: string;
        createdAt: string;
        updatedAt: string;
        walletType: serializers.wallet.WalletType.Raw;
    }
}
